name: Test

on:
  pull_request: {}
  push:
    branches:
    - main

jobs:
  dotnet:
    name: dotnet
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
              6.x
              8.x

      - name: Build
        run: dotnet build -c Debug

      - name: Test Core
        run: dotnet test -c Debug --no-build --logger:"console;verbosity=normal"

      - name: Setup Runtime Identifier
        id: rid
        shell: bash
        run: |
            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              echo "::set-output name=runtime::win-x64"
            elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
              echo "::set-output name=runtime::linux-x64"
            elif [ "${{ matrix.os }}" = "macos-latest" ]; then
              echo "::set-output name=runtime::osx-x64"
            fi

      - name: Check Native AOT
        shell: bash
        run: |
            cd NATS.NKeys.CheckNativeAot
            rm -rf bin obj
            dotnet publish -r ${{ steps.rid.outputs.runtime }} -c Release -o dist | tee output.txt

            # check for warnings
            grep -i warning output.txt && exit 1

            cd dist
            ls -lh

            export exe_file=NATS.NKeys.CheckNativeAot
            export exe_type=ELF

            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              export exe_file=NATS.NKeys.CheckNativeAot.exe
              export exe_type=PE32
              file NATS.NKeys.CheckNativeAot.exe | grep PE32 || exit 1
            elif [ "${{ matrix.os }}" = "macos-latest" ]; then
              export exe_type=Mach-O
            fi

            file $exe_file
            file $exe_file | grep $exe_type || exit 1

            # can't be less than a meg
            filesize=$(stat -c %s $exe_file)
            echo "File size: $filesize bytes"
            if [ $filesize -lt 1048576 ]; then
              echo "File is less than 1MB."
              exit 1
            fi

            ./$exe_file
